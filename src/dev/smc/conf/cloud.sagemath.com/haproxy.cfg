defaults
    log global
    option httplog
    mode http
    option forwardfor
    option http-server-close
    timeout connect 5000ms
    timeout client 5000ms
    timeout server 5000ms
    timeout tunnel 120s

    stats enable
    stats uri /haproxy
    stats realm Haproxy\ Statistics

backend static
    balance roundrobin
    timeout server 15s
    server nginx0 web0:8080 maxconn 10000 check
    server nginx1 web1:8080 maxconn 10000 check
    server nginx2 web2:8080 maxconn 10000 check

backend hub
    balance leastconn
    cookie SMCSERVERID3 insert nocache
    option httpclose
    timeout server 20s
    option httpchk /alive

    server hub0a web0:5000 cookie server:web0:5000 check inter 4000 maxconn 1000
    server hub0b web0:5002 cookie server:web0:5002 check inter 4000 maxconn 1000
    server hub0c web0:5004 cookie server:web0:5004 check inter 4000 maxconn 1000
    server hub0d web0:5006 cookie server:web0:5006 check inter 4000 maxconn 1000
    server hub0e web0:5008 cookie server:web0:5008 check inter 4000 maxconn 1000
    server hub0f web0:5010 cookie server:web0:5010 check inter 4000 maxconn 1000

    server hub1a web1:5000 cookie server:web1:5000 check inter 4000 maxconn 1000
    server hub1b web1:5002 cookie server:web1:5002 check inter 4000 maxconn 1000
    server hub1c web1:5004 cookie server:web1:5004 check inter 4000 maxconn 1000
    server hub1d web1:5006 cookie server:web1:5006 check inter 4000 maxconn 1000
    server hub1e web1:5008 cookie server:web1:5008 check inter 4000 maxconn 1000
    server hub1f web1:5010 cookie server:web1:5010 check inter 4000 maxconn 1000

    server hub2a web2:5000 cookie server:web2:5000 check inter 4000 maxconn 1000
    server hub2b web2:5002 cookie server:web2:5002 check inter 4000 maxconn 1000
    server hub2c web2:5004 cookie server:web2:5004 check inter 4000 maxconn 1000
    server hub2d web2:5006 cookie server:web2:5006 check inter 4000 maxconn 1000
    server hub2e web2:5008 cookie server:web2:5008 check inter 4000 maxconn 1000
    server hub2f web2:5010 cookie server:web2:5010 check inter 4000 maxconn 1000

backend proxy
    balance leastconn
    cookie SMCSERVERID2 insert nocache
    option httpclose
    timeout server 20s

    server proxy0a web0:5001 cookie server:web0:5000 check inter 4000 maxconn 1000
    server proxy0b web0:5003 cookie server:web0:5002 check inter 4000 maxconn 1000
    server proxy0c web0:5005 cookie server:web0:5004 check inter 4000 maxconn 1000
    server proxy0d web0:5007 cookie server:web0:5006 check inter 4000 maxconn 1000
    server proxy0e web0:5009 cookie server:web0:5008 check inter 4000 maxconn 1000
    server proxy0f web0:5011 cookie server:web0:5010 check inter 4000 maxconn 1000

    server proxy1a web1:5001 cookie server:web1:5000 check inter 4000 maxconn 1000
    server proxy1b web1:5003 cookie server:web1:5002 check inter 4000 maxconn 1000
    server proxy1c web1:5005 cookie server:web1:5004 check inter 4000 maxconn 1000
    server proxy1d web1:5007 cookie server:web1:5006 check inter 4000 maxconn 1000
    server proxy1e web1:5009 cookie server:web1:5008 check inter 4000 maxconn 1000
    server proxy1f web1:5011 cookie server:web1:5010 check inter 4000 maxconn 1000

    server proxy2a web2:5001 cookie server:web2:5000 check inter 4000 maxconn 1000
    server proxy2b web2:5003 cookie server:web2:5002 check inter 4000 maxconn 1000
    server proxy2c web2:5005 cookie server:web2:5004 check inter 4000 maxconn 1000
    server proxy2d web2:5007 cookie server:web2:5006 check inter 4000 maxconn 1000
    server proxy2e web2:5009 cookie server:web2:5008 check inter 4000 maxconn 1000
    server proxy2f web2:5011 cookie server:web2:5010 check inter 4000 maxconn 1000

frontend https
    bind *:443 ssl crt /home/salvus/smc/src/data/secrets/sagemath.com/nopassphrase.pem no-sslv3
    reqadd X-Forwarded-Proto:\ https
    timeout client 120s
    # replace "/policies/" with "/static/policies/" at the beginning of any request path.
    reqrep ^([^\ :]*)\ /policies/(.*)     \1\ /static/policies/\2
    acl is_static path_beg /static
    use_backend static if is_static
    acl is_hub path_beg /hub /cookies /blobs /invoice /upload /alive /auth /stats /registration /projects /help /settings /customize /base_url.js
    use_backend hub if is_hub
    acl is_proxy path_reg ^/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}/port
    acl is_proxy path_reg ^/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}/raw
    use_backend proxy if is_proxy
    default_backend static

frontend http *:80
    #redirect scheme https if !{ ssl_fc }
    redirect location https://cloud.sagemath.com
